{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ProductService {\n  constructor() {\n    this.products = [];\n  }\n  getAllProducts() {\n    return this.products;\n  }\n  getProductById(id) {\n    return this.products.find(product => product.id === id);\n  }\n  addProduct(product) {\n    this.products.push(product);\n  }\n  updateProduct(product) {\n    const index = this.products.findIndex(p => p.id === product.id);\n    if (index !== -1) {\n      this.products[index] = product;\n    }\n  }\n  deleteProduct(id) {\n    this.products = this.products.filter(product => product.id !== id);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)();\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ProductService","constructor","products","getAllProducts","getProductById","id","find","product","addProduct","push","updateProduct","index","findIndex","p","deleteProduct","filter","factory","ɵfac","providedIn"],"sources":["C:\\xampp\\htdocs\\testshepperd\\testshepperd\\my-angular-app\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Product } from '../models/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductService {\r\n  private products: Product[] = [];\r\n\r\n  getAllProducts(): Product[] {\r\n    return this.products;\r\n  }\r\n\r\n  getProductById(id: number): Product | undefined {\r\n    return this.products.find((product) => product.id === id);\r\n  }\r\n\r\n  addProduct(product: Product): void {\r\n    this.products.push(product);\r\n  }\r\n\r\n  updateProduct(product: Product): void {\r\n    const index = this.products.findIndex((p) => p.id === product.id);\r\n    if (index !== -1) {\r\n      this.products[index] = product;\r\n    }\r\n  }\r\n\r\n  deleteProduct(id: number): void {\r\n    this.products = this.products.filter((product) => product.id !== id);\r\n  }\r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,cAAc;EAH3BC,YAAA;IAIU,KAAAC,QAAQ,GAAc,EAAE;;EAEhCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACD,QAAQ;EACtB;EAEAE,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC;EAC3D;EAEAG,UAAUA,CAACD,OAAgB;IACzB,IAAI,CAACL,QAAQ,CAACO,IAAI,CAACF,OAAO,CAAC;EAC7B;EAEAG,aAAaA,CAACH,OAAgB;IAC5B,MAAMI,KAAK,GAAG,IAAI,CAACT,QAAQ,CAACU,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACR,EAAE,KAAKE,OAAO,CAACF,EAAE,CAAC;IACjE,IAAIM,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACT,QAAQ,CAACS,KAAK,CAAC,GAAGJ,OAAO;;EAElC;EAEAO,aAAaA,CAACT,EAAU;IACtB,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACa,MAAM,CAAER,OAAO,IAAKA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC;EACtE;;AAxBWL,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}