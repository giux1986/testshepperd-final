{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8000/api'; // Replace with your Laravel API URL\n  }\n  // Method to fetch all products from the API\n  getAllProducts() {\n    return this.http.get(`${this.baseUrl}/products`);\n  }\n  // Method to fetch a single product by ID from the API\n  getProductById(productId) {\n    return this.http.get(`${this.baseUrl}/products/${productId}`);\n  }\n  // Method to create a new product and send it to the API\n  createProduct(product) {\n    return this.http.post(`${this.baseUrl}/products`, product);\n  }\n  // Method to update an existing product using the API\n  updateProduct(productId, product) {\n    return this.http.put(`${this.baseUrl}/products/${productId}`, product);\n  }\n  // Method to delete a product using the API\n  deleteProduct(productId) {\n    return this.http.delete(`${this.baseUrl}/products/${productId}`);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ProductService","constructor","http","baseUrl","getAllProducts","get","getProductById","productId","createProduct","product","post","updateProduct","put","deleteProduct","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\xampp\\htdocs\\testshepperd\\testshepperd\\my-angular-app\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../models/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductService {\r\n  private baseUrl = 'http://localhost:8000/api'; // Replace with your Laravel API URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Method to fetch all products from the API\r\n  getAllProducts(): Observable<Product[]> {\r\n    return this.http.get<[]>(`${this.baseUrl}/products`);\r\n  }\r\n\r\n  // Method to fetch a single product by ID from the API\r\n  getProductById(productId: number): Observable<Product> {\r\n    return this.http.get<Product>(`${this.baseUrl}/products/${productId}`);\r\n  }\r\n\r\n  // Method to create a new product and send it to the API\r\n  createProduct(product: Product): Observable<Product> {\r\n    return this.http.post<Product>(`${this.baseUrl}/products`, product);\r\n  }\r\n\r\n  // Method to update an existing product using the API\r\n  updateProduct(productId: number, product: Product): Observable<Product> {\r\n    return this.http.put<Product>(`${this.baseUrl}/products/${productId}`, product);\r\n  }\r\n\r\n  // Method to delete a product using the API\r\n  deleteProduct(productId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.baseUrl}/products/${productId}`);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,2BAA2B,CAAC,CAAC;EAER;EAEvC;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAK,GAAG,IAAI,CAACF,OAAO,WAAW,CAAC;EACtD;EAEA;EACAG,cAAcA,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,aAAaI,SAAS,EAAE,CAAC;EACxE;EAEA;EACAC,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,GAAG,IAAI,CAACP,OAAO,WAAW,EAAEM,OAAO,CAAC;EACrE;EAEA;EACAE,aAAaA,CAACJ,SAAiB,EAAEE,OAAgB;IAC/C,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,OAAO,aAAaI,SAAS,EAAE,EAAEE,OAAO,CAAC;EACjF;EAEA;EACAI,aAAaA,CAACN,SAAiB;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,OAAO,aAAaI,SAAS,EAAE,CAAC;EACxE;;AA5BWP,cAAc,C;mBAAdA,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdlB,cAAc,C;SAAdA,cAAc;EAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}